/*!
 * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)
 *
 * Copyright (c) 2022 Kiro Risk (http://kiro.me)
 * All Rights Reserved. Apache Software License 2.0
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 */
!((e, t) => {
  "object" == typeof exports && "undefined" != typeof module
    ? (module.exports = t())
    : "function" == typeof define && define.amd
      ? define(t)
      : ((e = "undefined" != typeof globalThis ? globalThis : e || self).Fuse = t())
})(this, () =>
  ((e) => {
    var t = {}
    function n(r) {
      if (t[r]) return t[r].exports
      var o = (t[r] = { i: r, l: !1, exports: {} })
      return e[r].call(o.exports, o, o.exports, n), (o.l = !0), o.exports
    }
    return (
      (n.m = e),
      (n.c = t),
      (n.d = (e, t, r) => {
        n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r })
      }),
      (n.r = (e) => {
        "undefined" != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
          Object.defineProperty(e, "__esModule", { value: !0 })
      }),
      (n.t = (e, t) => {
        if ((1 & t && (e = n(e)), 8 & t)) return e
        if (4 & t && "object" == typeof e && e && e.__esModule) return e
        var r = Object.create(null)
        if ((n.r(r), Object.defineProperty(r, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e))
          for (var o in e) n.d(r, o, ((t) => e[t]).bind(null, o))
        return r
      }),
      (n.n = (e) => {
        var t = e && e.__esModule ? () => e.default : () => e
        return n.d(t, "a", t), t
      }),
      (n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
      (n.p = ""),
      n((n.s = 1))
    )
  })([
    (e, t) => {
      e.exports = (e) => (Array.isArray ? Array.isArray(e) : "[object Array]" === Object.prototype.toString.call(e))
    },
    (e, t, n) => {
      function r(e) {
        return (r =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? (e) => typeof e
            : (e) =>
                e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype
                  ? "symbol"
                  : typeof e)(e)
      }
      function o(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n]
          ;(r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
      }
      var i = n(2),
        a = n(8),
        c = n(0),
        s = (() => {
          function e(t, n) {
            var r = n.location,
              o = void 0 === r ? 0 : r,
              i = n.distance,
              c = void 0 === i ? 100 : i,
              s = n.threshold,
              h = void 0 === s ? 0.6 : s,
              l = n.maxPatternLength,
              u = void 0 === l ? 32 : l,
              f = n.caseSensitive,
              d = void 0 !== f && f,
              v = n.tokenSeparator,
              p = void 0 === v ? / +/g : v,
              g = n.findAllMatches,
              y = void 0 !== g && g,
              m = n.minMatchCharLength,
              k = void 0 === m ? 1 : m,
              S = n.id,
              x = void 0 === S ? null : S,
              b = n.keys,
              M = void 0 === b ? [] : b,
              _ = n.shouldSort,
              L = void 0 === _ || _,
              w = n.getFn,
              A = void 0 === w ? a : w,
              O = n.sortFn,
              C = void 0 === O ? (e, t) => e.score - t.score : O,
              j = n.tokenize,
              P = void 0 !== j && j,
              I = n.matchAllTokens,
              F = void 0 !== I && I,
              T = n.includeMatches,
              N = void 0 !== T && T,
              z = n.includeScore,
              E = void 0 !== z && z,
              W = n.verbose,
              K = void 0 !== W && W
            !((e, t) => {
              if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            })(this, e),
              (this.options = {
                location: o,
                distance: c,
                threshold: h,
                maxPatternLength: u,
                isCaseSensitive: d,
                tokenSeparator: p,
                findAllMatches: y,
                minMatchCharLength: k,
                id: x,
                keys: M,
                includeMatches: N,
                includeScore: E,
                shouldSort: L,
                getFn: A,
                sortFn: C,
                verbose: K,
                tokenize: P,
                matchAllTokens: F,
              }),
              this.setCollection(t)
          }
          var t, n
          return (
            (t = e),
            (n = [
              {
                key: "setCollection",
                value: function (e) {
                  return (this.list = e), e
                },
              },
              {
                key: "search",
                value: function (e) {
                  var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { limit: !1 }
                  this._log('---------\nSearch pattern: "'.concat(e, '"'))
                  var n = this._prepareSearchers(e),
                    r = n.tokenSearchers,
                    o = n.fullSearcher,
                    i = this._search(r, o),
                    a = i.weights,
                    c = i.results
                  return (
                    this._computeScore(a, c),
                    this.options.shouldSort && this._sort(c),
                    t.limit && "number" == typeof t.limit && (c = c.slice(0, t.limit)),
                    this._format(c)
                  )
                },
              },
              {
                key: "_prepareSearchers",
                value: function () {
                  var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                    t = []
                  if (this.options.tokenize)
                    for (var n = e.split(this.options.tokenSeparator), r = 0, o = n.length; r < o; r += 1)
                      t.push(new i(n[r], this.options))
                  return { tokenSearchers: t, fullSearcher: new i(e, this.options) }
                },
              },
              {
                key: "_search",
                value: function () {
                  var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                    t = arguments.length > 1 ? arguments[1] : void 0,
                    n = this.list,
                    r = {},
                    o = []
                  if ("string" == typeof n[0]) {
                    for (var i = 0, a = n.length; i < a; i += 1)
                      this._analyze(
                        { key: "", value: n[i], record: i, index: i },
                        { resultMap: r, results: o, tokenSearchers: e, fullSearcher: t },
                      )
                    return { weights: null, results: o }
                  }
                  for (var c = {}, s = 0, h = n.length; s < h; s += 1)
                    for (var l = n[s], u = 0, f = this.options.keys.length; u < f; u += 1) {
                      var d = this.options.keys[u]
                      if ("string" != typeof d) {
                        if (((c[d.name] = { weight: 1 - d.weight || 1 }), d.weight <= 0 || d.weight > 1))
                          throw new Error("Key weight has to be > 0 and <= 1")
                        d = d.name
                      } else c[d] = { weight: 1 }
                      this._analyze(
                        { key: d, value: this.options.getFn(l, d), record: l, index: s },
                        { resultMap: r, results: o, tokenSearchers: e, fullSearcher: t },
                      )
                    }
                  return { weights: c, results: o }
                },
              },
              {
                key: "_analyze",
                value: function (e, t) {
                  var n = e.key,
                    r = e.arrayIndex,
                    o = void 0 === r ? -1 : r,
                    i = e.value,
                    a = e.record,
                    s = e.index,
                    h = t.tokenSearchers,
                    l = void 0 === h ? [] : h,
                    u = t.fullSearcher,
                    f = void 0 === u ? [] : u,
                    d = t.resultMap,
                    v = void 0 === d ? {} : d,
                    p = t.results,
                    g = void 0 === p ? [] : p
                  if (null != i) {
                    var y = !1,
                      m = -1,
                      k = 0
                    if ("string" == typeof i) {
                      this._log("\nKey: ".concat("" === n ? "-" : n))
                      var S = f.search(i)
                      if ((this._log('Full text: "'.concat(i, '", score: ').concat(S.score)), this.options.tokenize)) {
                        for (var x = i.split(this.options.tokenSeparator), b = [], M = 0; M < l.length; M += 1) {
                          var _ = l[M]
                          this._log('\nPattern: "'.concat(_.pattern, '"'))
                          for (var L = !1, w = 0; w < x.length; w += 1) {
                            var A = x[w],
                              O = _.search(A),
                              C = {}
                            O.isMatch
                              ? ((C[A] = O.score), (y = !0), (L = !0), b.push(O.score))
                              : ((C[A] = 1), this.options.matchAllTokens || b.push(1)),
                              this._log('Token: "'.concat(A, '", score: ').concat(C[A]))
                          }
                          L && (k += 1)
                        }
                        m = b[0]
                        for (var j = b.length, P = 1; P < j; P += 1) m += b[P]
                        ;(m /= j), this._log("Token score average:", m)
                      }
                      var I = S.score
                      m > -1 && (I = (I + m) / 2), this._log("Score average:", I)
                      var F = !this.options.tokenize || !this.options.matchAllTokens || k >= l.length
                      if ((this._log("\nCheck Matches: ".concat(F)), (y || S.isMatch) && F)) {
                        var T = v[s]
                        T
                          ? T.output.push({
                              key: n,
                              arrayIndex: o,
                              value: i,
                              score: I,
                              matchedIndices: S.matchedIndices,
                            })
                          : ((v[s] = {
                              item: a,
                              output: [{ key: n, arrayIndex: o, value: i, score: I, matchedIndices: S.matchedIndices }],
                            }),
                            g.push(v[s]))
                      }
                    } else if (c(i))
                      for (var N = 0, z = i.length; N < z; N += 1)
                        this._analyze(
                          { key: n, arrayIndex: N, value: i[N], record: a, index: s },
                          { resultMap: v, results: g, tokenSearchers: l, fullSearcher: f },
                        )
                  }
                },
              },
              {
                key: "_computeScore",
                value: function (e, t) {
                  this._log("\n\nComputing score:\n")
                  for (var n = 0, r = t.length; n < r; n += 1) {
                    for (var o = t[n].output, i = o.length, a = 1, c = 1, s = 0; s < i; s += 1) {
                      var h = e ? e[o[s].key].weight : 1,
                        l = (1 === h ? o[s].score : o[s].score || 0.001) * h
                      1 !== h ? (c = Math.min(c, l)) : ((o[s].nScore = l), (a *= l))
                    }
                    ;(t[n].score = 1 === c ? a : c), this._log(t[n])
                  }
                },
              },
              {
                key: "_sort",
                value: function (e) {
                  this._log("\n\nSorting...."), e.sort(this.options.sortFn)
                },
              },
              {
                key: "_format",
                value: function (e) {
                  var t = []
                  if (this.options.verbose) {
                    var n = []
                    this._log(
                      "\n\nOutput:\n\n",
                      JSON.stringify(e, (e, t) => {
                        if ("object" === r(t) && null !== t) {
                          if (-1 !== n.indexOf(t)) return
                          n.push(t)
                        }
                        return t
                      }),
                    ),
                      (n = null)
                  }
                  var o = []
                  this.options.includeMatches &&
                    o.push((e, t) => {
                      var n = e.output
                      t.matches = []
                      for (var r = 0, o = n.length; r < o; r += 1) {
                        var i = n[r]
                        if (0 !== i.matchedIndices.length) {
                          var a = { indices: i.matchedIndices, value: i.value }
                          i.key && (a.key = i.key),
                            i.hasOwnProperty("arrayIndex") && i.arrayIndex > -1 && (a.arrayIndex = i.arrayIndex),
                            t.matches.push(a)
                        }
                      }
                    }),
                    this.options.includeScore &&
                      o.push((e, t) => {
                        t.score = e.score
                      })
                  for (var i = 0, a = e.length; i < a; i += 1) {
                    var c = e[i]
                    if ((this.options.id && (c.item = this.options.getFn(c.item, this.options.id)[0]), o.length)) {
                      for (var s = { item: c.item }, h = 0, l = o.length; h < l; h += 1) o[h](c, s)
                      t.push(s)
                    } else t.push(c.item)
                  }
                  return t
                },
              },
              {
                key: "_log",
                value: function () {
                  var e
                  this.options.verbose && (e = console).log.apply(e, arguments)
                },
              },
            ]) && o(t.prototype, n),
            e
          )
        })()
      e.exports = s
    },
    (e, t, n) => {
      function r(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n]
          ;(r.enumerable = r.enumerable || !1),
            (r.configurable = !0),
            "value" in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
      }
      var o = n(3),
        i = n(4),
        a = n(7),
        c = (() => {
          function e(t, n) {
            var r = n.location,
              o = void 0 === r ? 0 : r,
              i = n.distance,
              c = void 0 === i ? 100 : i,
              s = n.threshold,
              h = void 0 === s ? 0.6 : s,
              l = n.maxPatternLength,
              u = void 0 === l ? 32 : l,
              f = n.isCaseSensitive,
              d = void 0 !== f && f,
              v = n.tokenSeparator,
              p = void 0 === v ? / +/g : v,
              g = n.findAllMatches,
              y = void 0 !== g && g,
              m = n.minMatchCharLength,
              k = void 0 === m ? 1 : m
            !((e, t) => {
              if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            })(this, e),
              (this.options = {
                location: o,
                distance: c,
                threshold: h,
                maxPatternLength: u,
                isCaseSensitive: d,
                tokenSeparator: p,
                findAllMatches: y,
                minMatchCharLength: k,
              }),
              (this.pattern = d ? t : t.toLowerCase()),
              this.pattern.length <= u && (this.patternAlphabet = a(this.pattern))
          }
          var t, n
          return (
            (t = e),
            (n = [
              {
                key: "search",
                value: function (e) {
                  if ((this.options.isCaseSensitive || (e = e.toLowerCase()), this.pattern === e))
                    return { isMatch: !0, score: 0, matchedIndices: [[0, e.length - 1]] }
                  var t = this.options,
                    n = t.maxPatternLength,
                    r = t.tokenSeparator
                  if (this.pattern.length > n) return o(e, this.pattern, r)
                  var a = this.options,
                    c = a.location,
                    s = a.distance,
                    h = a.threshold,
                    l = a.findAllMatches,
                    u = a.minMatchCharLength
                  return i(e, this.pattern, this.patternAlphabet, {
                    location: c,
                    distance: s,
                    threshold: h,
                    findAllMatches: l,
                    minMatchCharLength: u,
                  })
                },
              },
            ]) && r(t.prototype, n),
            e
          )
        })()
      e.exports = c
    },
    (e, t) => {
      var n = /[-[\]/{}$$$$*+?.\\^$|]/g
      e.exports = (e, t) => {
        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : / +/g,
          o = new RegExp(t.replace(n, "\\$&").replace(r, "|")),
          i = e.match(o),
          a = !!i,
          c = []
        if (a)
          for (var s = 0, h = i.length; s < h; s += 1) {
            var l = i[s]
            c.push([e.indexOf(l), l.length - 1])
          }
        return { score: a ? 0.5 : 1, isMatch: a, matchedIndices: c }
      }
    },
    (e, t, n) => {
      var r = n(5),
        o = n(6)
      e.exports = (e, t, n, i) => {
        for (
          var a = i.location,
            c = void 0 === a ? 0 : a,
            s = i.distance,
            h = void 0 === s ? 100 : s,
            l = i.threshold,
            u = void 0 === l ? 0.6 : l,
            f = i.findAllMatches,
            d = void 0 !== f && f,
            v = i.minMatchCharLength,
            p = void 0 === v ? 1 : v,
            g = c,
            y = e.length,
            m = u,
            k = e.indexOf(t, g),
            S = t.length,
            x = [],
            b = 0;
          b < y;
          b += 1
        )
          x[b] = 0
        if (-1 !== k) {
          var M = r(t, { errors: 0, currentLocation: k, expectedLocation: g, distance: h })
          if (((m = Math.min(M, m)), -1 !== (k = e.lastIndexOf(t, g + S)))) {
            var _ = r(t, { errors: 0, currentLocation: k, expectedLocation: g, distance: h })
            m = Math.min(_, m)
          }
        }
        k = -1
        for (var L = [], w = 1, A = S + y, O = 1 << (S <= 31 ? S - 1 : 30), C = 0; C < S; C += 1) {
          for (var j = 0, P = A; j < P; ) {
            r(t, { errors: C, currentLocation: g + P, expectedLocation: g, distance: h }) <= m ? (j = P) : (A = P),
              (P = Math.floor((A - j) / 2 + j))
          }
          A = P
          var I = Math.max(1, g - P + 1),
            F = d ? y : Math.min(g + P, y) + S,
            T = Array(F + 2)
          T[F + 1] = (1 << C) - 1
          for (var N = F; N >= I; N -= 1) {
            var z = N - 1,
              E = n[e.charAt(z)]
            if (
              (E && (x[z] = 1),
              (T[N] = ((T[N + 1] << 1) | 1) & E),
              0 !== C && (T[N] |= ((L[N + 1] | L[N]) << 1) | 1 | L[N + 1]),
              T[N] & O && (w = r(t, { errors: C, currentLocation: z, expectedLocation: g, distance: h })) <= m)
            ) {
              if (((m = w), (k = z) <= g)) break
              I = Math.max(1, 2 * g - k)
            }
          }
          if (r(t, { errors: C + 1, currentLocation: g, expectedLocation: g, distance: h }) > m) break
          L = T
        }
        return { isMatch: k >= 0, score: 0 === w ? 0.001 : w, matchedIndices: o(x, p) }
      }
    },
    (e, t) => {
      e.exports = (e, t) => {
        var n = t.errors,
          r = void 0 === n ? 0 : n,
          o = t.currentLocation,
          i = void 0 === o ? 0 : o,
          a = t.expectedLocation,
          c = void 0 === a ? 0 : a,
          s = t.distance,
          h = void 0 === s ? 100 : s,
          l = r / e.length,
          u = Math.abs(c - i)
        return h ? l + u / h : u ? 1 : l
      }
    },
    (e, t) => {
      e.exports = () => {
        for (
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
            n = [],
            r = -1,
            o = -1,
            i = 0,
            a = e.length;
          i < a;
          i += 1
        ) {
          var c = e[i]
          c && -1 === r ? (r = i) : c || -1 === r || ((o = i - 1) - r + 1 >= t && n.push([r, o]), (r = -1))
        }
        return e[i - 1] && i - r >= t && n.push([r, i - 1]), n
      }
    },
    (e, t) => {
      e.exports = (e) => {
        for (var t = {}, n = e.length, r = 0; r < n; r += 1) t[e.charAt(r)] = 0
        for (var o = 0; o < n; o += 1) t[e.charAt(o)] |= 1 << (n - o - 1)
        return t
      }
    },
    (e, t, n) => {
      var r = n(0)
      e.exports = (e, t) =>
        (function e(t, n, o) {
          if (n) {
            var i = n.indexOf("."),
              a = n,
              c = null
            ;-1 !== i && ((a = n.slice(0, i)), (c = n.slice(i + 1)))
            var s = t[a]
            if (null != s)
              if (c || ("string" != typeof s && "number" != typeof s))
                if (r(s)) for (var h = 0, l = s.length; h < l; h += 1) e(s[h], c, o)
                else c && e(s, c, o)
              else o.push(s)
          } else o.push(t)
          return o
        })(e, t, [])
    },
  ]),
)

